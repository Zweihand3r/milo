{
  "version": 3,
  "sources": ["../../../tools/utils/utils.js"],
  "sourcesContent": ["const IMS_CLIENT_ID = 'milo_ims';\nconst IMS_PROD_URL = 'https://auth.services.adobe.com/imslib/imslib.min.js';\nconst STYLE_SHEETS = {};\nconst CONFIGS = {};\n\nconst getImsToken = async (loadScript) => {\n  window.adobeid = {\n    client_id: IMS_CLIENT_ID,\n    environment: 'prod',\n    scope: 'AdobeID,openid',\n  };\n\n  if (!window.adobeIMS) {\n    await loadScript(IMS_PROD_URL);\n  }\n  return window.adobeIMS?.getAccessToken()?.token;\n};\n\nconst getSheet = async (url) => {\n  if (STYLE_SHEETS[url]) return STYLE_SHEETS[url];\n  const resp = await fetch(url);\n  const text = await resp.text();\n  const sheet = new CSSStyleSheet();\n  sheet.replace(text);\n  STYLE_SHEETS[url] = sheet;\n  return sheet;\n};\n\nconst getCustomConfig = async (path) => {\n  /* c8 ignore next 3 */\n  if (CONFIGS[path] !== undefined) {\n    return CONFIGS[path];\n  }\n  let config = null;\n  const resp = await fetch(path);\n  if (resp.ok) {\n    config = await resp.json();\n  }\n  CONFIGS[path] = config;\n  return CONFIGS[path];\n};\n\nexport { getImsToken, getSheet, getCustomConfig };\n"],
  "mappings": ";AAAA,IAAM,gBAAgB;AACtB,IAAM,eAAe;AAErB,IAAM,UAAU,CAAC;AAEjB,IAAM,cAAc,OAAO,eAAe;AACxC,SAAO,UAAU;AAAA,IACf,WAAW;AAAA,IACX,aAAa;AAAA,IACb,OAAO;AAAA,EACT;AAEA,MAAI,CAAC,OAAO,UAAU;AACpB,UAAM,WAAW,YAAY;AAAA,EAC/B;AACA,SAAO,OAAO,UAAU,eAAe,GAAG;AAC5C;AAYA,IAAM,kBAAkB,OAAO,SAAS;AAEtC,MAAI,QAAQ,IAAI,MAAM,QAAW;AAC/B,WAAO,QAAQ,IAAI;AAAA,EACrB;AACA,MAAI,SAAS;AACb,QAAM,OAAO,MAAM,MAAM,IAAI;AAC7B,MAAI,KAAK,IAAI;AACX,aAAS,MAAM,KAAK,KAAK;AAAA,EAC3B;AACA,UAAQ,IAAI,IAAI;AAChB,SAAO,QAAQ,IAAI;AACrB;",
  "names": []
}
