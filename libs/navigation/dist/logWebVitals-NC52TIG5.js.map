{
  "version": 3,
  "sources": ["../../utils/logWebVitals.js"],
  "sourcesContent": ["const LANA_CLIENT_ID = 'pageperf';\n\nlet lanaSent;\n\nfunction sendToLana(lanaData) {\n  if (lanaSent) return;\n  const ua = window.navigator.userAgent;\n\n  Object.assign(lanaData, {\n    chromeVer: ua.match(/Chrome\\/(\\d+\\.\\d+\\.\\d+\\.\\d+)/)?.[1] || '',\n    country: sessionStorage.getItem('akamai') || '',\n    // eslint-disable-next-line compat/compat\n    downlink: window.navigator?.connection?.downlink || '',\n    loggedIn: window.adobeIMS?.isSignedInUser() || false,\n    os: (ua.match(/Windows/) && 'win')\n      || (ua.match(/Mac/) && 'mac')\n      || (ua.match(/Android/) && 'android')\n      || (ua.match(/Linux/) && 'linux')\n      || '',\n    windowHeight: window.innerHeight,\n    windowWidth: window.innerWidth,\n    url: `${window.location.host}${window.location.pathname}`,\n  });\n\n  lanaData.cls ||= 0;\n  const lanaDataStr = Object.entries(lanaData)\n    .sort(([a], [b]) => a.localeCompare(b))\n    .map(([key, value]) => `${key}=${value}`)\n    .join(',');\n\n  window.lana.log(lanaDataStr, {\n    clientId: LANA_CLIENT_ID,\n    sampleRate: 100,\n  });\n\n  lanaSent = true;\n}\n\nfunction observeCLS(lanaData) {\n  let cls = 0;\n  /* c8 ignore start */\n  new PerformanceObserver((entryList) => {\n    for (const entry of entryList.getEntries()) {\n      if (!entry.hadRecentInput) cls += entry.value;\n    }\n    lanaData.cls = cls.toPrecision(4);\n  }).observe({ type: 'layout-shift', buffered: true });\n}\n\nfunction getElementInfo(el) {\n  const elSrc = el.src || el.currentSrc || el.href || el.poster;\n  if (elSrc) {\n    try {\n      const srcUrl = new URL(elSrc);\n      return srcUrl.origin === window.location.origin ? srcUrl.pathname : srcUrl.href;\n    } catch {\n      // fall through\n    }\n  }\n  const elHtml = el.outerHTML.replaceAll(',', '');\n  if (elHtml.length <= 100) return elHtml;\n  return `${el.outerHTML.substring(0, 100)}...`;\n}\n\nfunction isFragmentFromMep(fragPath, mep) {\n  return mep.experiments?.some(({ selectedVariant }) => {\n    const { commands = [], fragments = [] } = selectedVariant || {};\n\n    return commands.some((cmd) => {\n      try {\n        return new URL(cmd.target).pathname === fragPath;\n      } catch {\n        return false;\n      }\n    }) || fragments.some((cmd) => cmd?.val === fragPath);\n  });\n}\n\nconst boolStr = (val) => `${!!val}`;\n\nfunction observeLCP(lanaData, delay, mep) {\n  const sectionOne = document.querySelector('main > div');\n  new PerformanceObserver((list) => {\n    const entries = list.getEntries();\n    const lastEntry = entries[entries.length - 1]; // Use the latest LCP candidate\n    lanaData.lcp = parseInt(lastEntry.startTime, 10);\n    const lcpEl = lastEntry.element;\n    lanaData.lcpElType = lcpEl.nodeName.toLowerCase();\n    lanaData.lcpEl = getElementInfo(lcpEl);\n    lanaData.lcpSectionOne = boolStr(sectionOne.contains(lcpEl));\n    const closestFrag = lcpEl.closest('.fragment');\n    lanaData.isFrag = boolStr(closestFrag);\n    if (closestFrag) {\n      lanaData.isMep = boolStr(isFragmentFromMep(closestFrag.dataset.path, mep));\n    } else {\n      lanaData.isMep = 'false';\n    }\n\n    setTimeout(() => {\n      sendToLana(lanaData);\n    }, parseInt(delay, 10));\n  }).observe({ type: 'largest-contentful-paint', buffered: true });\n  /* c8 ignore stop */\n}\n\nfunction logMepExperiments(lanaData, mep) {\n  mep?.experiments?.forEach((exp, idx) => {\n    // only log manifests that affect the page\n    if (exp.selectedVariantName === 'default') return;\n    lanaData[`manifest${idx + 1}path`] = exp.manifestPath;\n    lanaData[`manifest${idx + 1}selected`] = exp.selectedVariantName;\n  });\n}\n\nexport default function webVitals(mep, { delay = 1000, sampleRate = 50 } = {}) {\n  const isChrome = () => {\n    const nav = window.navigator;\n    return nav.userAgent.includes('Chrome') && nav.vendor.includes('Google');\n  };\n  if (!isChrome() || Math.random() * 100 > sampleRate) return;\n  const getConsent = () => window.adobePrivacy?.activeCookieGroups().indexOf('C0002') !== -1;\n  function handleEvent() {\n    if (!getConsent()) return;\n    const lanaData = {};\n    logMepExperiments(lanaData, mep);\n    observeCLS(lanaData);\n    observeLCP(lanaData, delay, mep);\n  }\n  if (getConsent()) {\n    handleEvent();\n    return;\n  }\n  window.addEventListener('adobePrivacy:PrivacyConsent', handleEvent, { once: true });\n  window.addEventListener('adobePrivacy:PrivacyCustom', handleEvent, { once: true });\n}\n"],
  "mappings": "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",
  "names": []
}
