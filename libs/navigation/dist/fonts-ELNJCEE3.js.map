{
  "version": 3,
  "sources": ["../../utils/fonts.js"],
  "sourcesContent": ["// A gently modified version of the dynamic subsetting loader from Adobe Fonts\nfunction dynamicTypekit(kitId, d = document) {\n  const config = { kitId, scriptTimeout: 3000, async: true };\n  /* c8 ignore next 1 */\n  const h = d.documentElement; const t = setTimeout(() => { h.className = `${h.className.replace(/\\bwf-loading\\b/g, '')} wf-inactive`; }, config.scriptTimeout); const tk = d.createElement('script'); let f = false; const s = d.getElementsByTagName('script')[0]; let a; h.className += ' wf-loading'; tk.src = `https://use.typekit.net/${config.kitId}.js`; tk.async = true; tk.onload = tk.onreadystatechange = function () { a = this.readyState; if (f || a && a != 'complete' && a != 'loaded') return; f = true; clearTimeout(t); try { Typekit.load(config); } catch (e) {} }; s.parentNode.insertBefore(tk, s);\n  return h;\n}\n\n/**\n * Set the fonts of the page.\n *\n * Determines if the font should be a classic CSS integration\n * or if it should be a JS integration (dynamic subsetting) for CJK.\n *\n * @param {Object} locale the locale details\n */\nexport default function loadFonts(locale, loadStyle) {\n  const tkSplit = locale.tk.split('.');\n  if (tkSplit[1] === 'css') {\n    return new Promise((resolve) => {\n      loadStyle(`https://use.typekit.net/${locale.tk}`, resolve);\n    });\n  }\n  return dynamicTypekit(locale.tk);\n}\n"],
  "mappings": ";;;AACA,SAAS,eAAe,OAAO,IAAI,UAAU;AAC3C,QAAM,SAAS,EAAE,OAAO,eAAe,KAAM,OAAO,KAAK;AAEzD,QAAM,IAAI,EAAE;AAAiB,QAAM,IAAI,WAAW,MAAM;AAAE,MAAE,YAAY,GAAG,EAAE,UAAU,QAAQ,mBAAmB,EAAE,CAAC;AAAA,EAAgB,GAAG,OAAO,aAAa;AAAG,QAAM,KAAK,EAAE,cAAc,QAAQ;AAAG,MAAI,IAAI;AAAO,QAAM,IAAI,EAAE,qBAAqB,QAAQ,EAAE,CAAC;AAAG,MAAI;AAAG,IAAE,aAAa;AAAe,KAAG,MAAM,2BAA2B,OAAO,KAAK;AAAO,KAAG,QAAQ;AAAM,KAAG,SAAS,GAAG,qBAAqB,WAAY;AAAE,QAAI,KAAK;AAAY,QAAI,KAAK,KAAK,KAAK,cAAc,KAAK,SAAU;AAAQ,QAAI;AAAM,iBAAa,CAAC;AAAG,QAAI;AAAE,cAAQ,KAAK,MAAM;AAAA,IAAG,SAAS,GAAG;AAAA,IAAC;AAAA,EAAE;AAAG,IAAE,WAAW,aAAa,IAAI,CAAC;AACvlB,SAAO;AACT;AAUe,SAAR,UAA2B,QAAQ,WAAW;AACnD,QAAM,UAAU,OAAO,GAAG,MAAM,GAAG;AACnC,MAAI,QAAQ,CAAC,MAAM,OAAO;AACxB,WAAO,IAAI,QAAQ,CAAC,YAAY;AAC9B,gBAAU,2BAA2B,OAAO,EAAE,IAAI,OAAO;AAAA,IAC3D,CAAC;AAAA,EACH;AACA,SAAO,eAAe,OAAO,EAAE;AACjC;",
  "names": []
}
